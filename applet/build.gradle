group 'aaop'
version '1.0-SNAPSHOT'

apply plugin: 'java'

sourceCompatibility = 1.7

// Applet id for the CAP - pick yours
final def appletId = '482871D58AB7465E5E05'

// Common settings, definitions
final def rootPath = rootDir.absolutePath
final def curProjectDir = projectDir.absolutePath
final def capOutDir = new File(curProjectDir + '/out/cap')
final def libs = rootPath + '/libs'
final def libsSdk = rootPath + '/libs-sdks'

// JavaCard SDKs and libraries
final def JC212 = libsSdk + '/jc212_kit'
final def JC221 = libsSdk + '/jc221_kit'
final def JC222 = libsSdk + '/jc222_kit'
final def JC303 = libsSdk + '/jc303_kit'
final def JC304 = libsSdk + '/jc304_kit'
final def JC305 = libsSdk + '/jc305u1_kit'
final def GP211 = libs + '/globalplatform-2_1_1'

// Which JavaCard SDK to use - select
final def JC_SELECTED = JC304

// Maven repository + local libs file
repositories {
    mavenCentral()
    flatDir {
        dirs rootPath + '/libs'
    }
}

configurations {
    ant_javacard
}

dependencies {
    ant_javacard group: 'com.klinec', name: 'ant-javacard', version: '1.8.0'

    compile fileTree(dir: GP211, include: '*.jar')
    compile fileTree(dir: JC_SELECTED + '/lib', include: '*.jar')

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'org.testng:testng:6.1.1'

    testCompile group: 'com.klinec', name: 'javacard-tools', version: '0.0.1', transitive: false
    testCompile group: 'com.klinec', name: 'jcardsim', version: '3.0.4', transitive: false
}

test {
    useTestNG()
    jvmArgs '-noverify'
}

// Ant task definition for building CAP files
ant.taskdef(name: 'javacard',
        classname: 'pro.javacard.ant.JavaCard',
        classpath: configurations.ant_javacard.asPath
)

sourceSets {
    test {
        /* Gradle prepends automatically all compile dependencies to the testCompile and testRuntime
         * configuration. So the java card api.jar needs to be filtered from the class path otherwise
         * it couldn't be overwritten by jcardsim.
         *
         * In the longterm this might be solvable in javaCard gradle plugin.
         */
        runtimeClasspath = project.sourceSets.test.runtimeClasspath.filter { !it.path.endsWith("lib/api.jar") }
    }
}

// Gradle task for building cap files.
// Current version builds one cap file for the main applet.
task cap {
    final def appletCapFile = capOutDir.absolutePath + '/applet.cap'
    final def javaDir = sourceSets.main.java.srcDirs[0].toString(); // src/main/java

    inputs.files(fileTree(javaDir))
    outputs.dir(capOutDir)
    outputs.file(appletCapFile)

    doLast {
        capOutDir.mkdirs()

        // ANT javacard task wrapper, using https://github.com/martinpaljak/ant-javacard
        ant.javacard(jckit: JC_SELECTED) {

            // Here you can define more than one CAP file to be generated.
            // The source directory + package has to be specified manually at the moment.
            cap(output: appletCapFile, sources: javaDir)
            {
                // Main applet file definition + applet ID
                applet(class: 'applet.MainApplet', aid: appletId);
                jimport(exps: GP211, jar: GP211 + '/gp211.jar');
            }
        }
    }
}
